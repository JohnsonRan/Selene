name: Build Selene

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: write
  actions: write

jobs:
  build:
    strategy:
      matrix:
        include:
          # Android
          - platform: android
            os: ubuntu-latest
            build-args: "--android-only"
            
          # macOS / iOS
          - platform: macos
            os: macos-26
            arch: arm64
            build-args: "--apple-only"
            
          # Windows
          - platform: windows
            os: windows-latest
    
    runs-on: ${{ matrix.os }}
    name: Build ${{ matrix.platform }}
    
    steps:
      - name: Clone repository
        run: |
          git clone https://${{ secrets.PULL_TOKEN }}@${{ secrets.REPO_URL }}.git .
        shell: bash
      
      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          cache: true
      
      - name: Build with build.sh (Android/macOS/iOS)
        if: runner.os != 'Windows'
        continue-on-error: true
        run: |
          chmod +x build.sh
          yes | flutter doctor --android-licenses || true
          ./build.sh ${{ matrix.build-args }} --sequential
        shell: bash
      
      - name: Build on Windows
        if: runner.os == 'Windows'
        continue-on-error: true
        shell: pwsh
        run: |
          $version = (Get-Content pubspec.yaml | Select-String '^version:' | ForEach-Object {$_ -replace 'version: ', ''}).trim()
          Write-Host "Building version: $version" -ForegroundColor Green
          flutter pub get
          New-Item -ItemType Directory -Force -Path dist | Out-Null
          Write-Host "Building Windows AMD64..." -ForegroundColor Blue
          flutter build windows --release
          Compress-Archive -Path build/windows/x64/runner/Release/* -DestinationPath "dist/selene-$version-windows-x64-portable.zip" -Force
          Write-Host "Windows AMD64 build complete" -ForegroundColor Green
      
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        continue-on-error: true
        with:
          name: ${{ matrix.platform }}-${{ matrix.arch || 'release' }}-artifacts
          path: dist/*

  create-release:
    needs: build
    runs-on: ubuntu-latest
    name: Create Release
    if: startsWith(github.ref, 'refs/tags/') && (success() || failure())
    steps:
      - uses: actions/checkout@v4
      
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: all-artifacts
      
      - name: Prepare release artifacts
        run: |
          mkdir -p release-files
          find all-artifacts -type f -exec cp {} release-files/ \;
          ls -lh release-files/
      
      - name: Get version from tag
        id: tag_version
        run: echo "version=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
      
      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ steps.tag_version.outputs.version }}
          name: Selene ${{ steps.tag_version.outputs.version }}
          files: release-files/*
          draft: false
          prerelease: false
          fail_on_unmatched_files: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        
  cleanup:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Delete workflow runs
        uses: Mattraks/delete-workflow-runs@main
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          repository: ${{ github.repository }}
          retain_days: 0
          keep_minimum_runs: 2